import logging
import asyncio
import requests
from aiogram import Bot, Dispatcher, types, Router, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

API_TOKEN = "7982410644:AAH5Wj4rcgJpHt1gQT7GiAAYBw4wl4Rezc0"
WEATHER_API_KEY = "979cf328dcfd6962840c6c2219cece30"
WEATHER_API_URL = "https://api.openweathermap.org/data/2.5/weather"

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
router = Router()

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
main_kb = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üå¶ –ü–æ–≥–æ–¥–∞"), KeyboardButton(text="üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è")]],
    resize_keyboard=True
)

@router.message(F.text == "/start")
async def start(message: types.Message):
    await message.answer("–í—ñ—Ç–∞—î–º–æ! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ü–æ–≥–æ–¥–∞', —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑.", reply_markup=main_kb)

@router.message(F.text == "/help")
async def help_command(message: types.Message):
    await message.answer("–ö–æ–º–∞–Ω–¥–∏: \n/start - –ü–æ—á–∞—Ç–∏ \n/help - –î–æ–ø–æ–º–æ–≥–∞ \n/weather - –î—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É")

@router.message(F.text == "üå¶ –ü–æ–≥–æ–¥–∞")
async def get_weather(message: types.Message):
    city = "Kyiv"  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    params = {"q": city, "appid": WEATHER_API_KEY, "units": "metric", "lang": "uk"}
    try:
        response = requests.get(WEATHER_API_URL, params=params, timeout=10)
        response.raise_for_status()
        data = response.json()
        temp = data['main']['temp']
        description = data['weather'][0]['description']
        await message.answer(f"–ü–æ–≥–æ–¥–∞ —É {city}: {temp}¬∞C, {description}")
    except requests.exceptions.RequestException as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏: {e}")
        await message.answer("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

@router.message(F.text == "üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è")
async def contact_info(message: types.Message):
    await message.answer("–ù–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏: üìß email@example.com, üìû +380123456789")

async def main():
    try:
        dp.include_router(router)
        await bot.delete_webhook(drop_pending_updates=True)
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ")
        await dp.start_polling(bot)
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
    finally:
        logger.info("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–≤ —Ä–æ–±–æ—Ç—É")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É")