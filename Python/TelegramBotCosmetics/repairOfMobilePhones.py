import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import sqlite3

TOKEN = '7768615088:AAF71qmjbIhDTf7xIuR5y5SH92FogFVhReA'  # –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π API-—Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(TOKEN)

def init_db():
    conn = sqlite3.connect('repair_bot_db.sqlite')
    cursor = conn.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS users (
                      id INTEGER PRIMARY KEY,
                      username TEXT,
                      phone TEXT)''')
    cursor.execute('''CREATE TABLE IF NOT EXISTS orders (
                      id INTEGER PRIMARY KEY AUTOINCREMENT,
                      user_id INTEGER,
                      service TEXT,
                      status TEXT DEFAULT '–û—á—ñ–∫—É—î –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è')''')
    conn.commit()
    conn.close()

@bot.message_handler(commands=['start'])
def start_message(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton('üîß –ü–æ—Å–ª—É–≥–∏ —Ä–µ–º–æ–Ω—Ç—É'),
               KeyboardButton('üìã –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
               KeyboardButton('üìû –ó–≤‚Äô—è–∑–∞—Ç–∏—Å—è –∑ –º–∞–π—Å—Ç—Ä–æ–º'))
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}! –û–±–µ—Ä–∏ –æ–ø—Ü—ñ—é:', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'üîß –ü–æ—Å–ª—É–≥–∏ —Ä–µ–º–æ–Ω—Ç—É')
def show_services(message):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton('üì± –ó–∞–º—ñ–Ω–∞ –µ–∫—Ä–∞–Ω—É', callback_data='order_screen'))
    markup.add(InlineKeyboardButton('üîã –ó–∞–º—ñ–Ω–∞ –±–∞—Ç–∞—Ä–µ—ó', callback_data='order_battery'))
    markup.add(InlineKeyboardButton('üîå –†–µ–º–æ–Ω—Ç —Ä–æ–∑‚Äô—î–º—É –∑–∞—Ä—è–¥–∫–∏', callback_data='order_connector'))
    bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É:', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('order_'))
def order_service(call):
    service = call.data.split('_')[1]
    service_dict = {
        'screen': '–ó–∞–º—ñ–Ω–∞ –µ–∫—Ä–∞–Ω—É',
        'battery': '–ó–∞–º—ñ–Ω–∞ –±–∞—Ç–∞—Ä–µ—ó',
        'connector': '–†–µ–º–æ–Ω—Ç —Ä–æ–∑‚Äô—î–º—É –∑–∞—Ä—è–¥–∫–∏'
    }
    service_name = service_dict.get(service, service)
    conn = sqlite3.connect('repair_bot_db.sqlite')
    cursor = conn.cursor()
    cursor.execute('INSERT INTO orders (user_id, service) VALUES (?, ?)', (call.from_user.id, service_name))
    conn.commit()
    conn.close()
    bot.send_message(call.message.chat.id, f'‚úÖ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è "{service_name}" –ø—Ä–∏–π–Ω—è—Ç–æ!')

@bot.message_handler(func=lambda message: message.text == 'üìã –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
def my_orders(message):
    conn = sqlite3.connect('repair_bot_db.sqlite')
    cursor = conn.cursor()
    cursor.execute('SELECT service, status FROM orders WHERE user_id = ?', (message.from_user.id,))
    orders = cursor.fetchall()
    conn.close()
    if orders:
        response = '\n'.join([f'üîß {o[0]} - {o[1]}' for o in orders])
    else:
        response = '–£ –≤–∞—Å –ø–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –∑–∞–º–æ–≤–ª–µ–Ω—å.'
    bot.send_message(message.chat.id, response)

@bot.message_handler(func=lambda message: message.text == 'üìû –ó–≤‚Äô—è–∑–∞—Ç–∏—Å—è –∑ –º–∞–π—Å—Ç—Ä–æ–º')
def contact_master(message):
    bot.send_message(message.chat.id, 'üì± –¢–µ–ª–µ—Ñ–æ–Ω –º–∞–π—Å—Ç—Ä–∞: +380 987 654 321')

if __name__ == '__main__':
    init_db()
    bot.polling(none_stop=True)